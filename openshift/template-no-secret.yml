apiVersion: v1
kind: Template
labels:
  template: openshift-backup-app-no-secret-template
message: |-
  A recurring backup job has been created.
  For more information on using this template, see https://github.com/gerald1248/openshift-backup
metadata:
  name: openshift-backup-app-no-secret-template
  annotations:
    description: |-
      OpenShift cluster backup based on 'oc' and the experimental 2nd day operations backup script (no secret).
parameters:
- name: NAME
  displayName: Name
  description: Name of each API object
  value: openshift-backup
- name: NAMESPACE
  displayName: Project
  description: The project that is created for the test runner
  value: cluster-backup
- name: SCHEDULE
  displayName: Schedule
  description: Schedule determining when and how often tests are run
  value: "15 0 * * *"
- name: CAPACITY
  displayName: Persistent volume capacity
  description: Attempt to bind to this persistent volume
  value: "2Gi"
- name: BACKUP_RETAIN_DAYS
  displayName: Backup retain backups (days)
  description: How many days backups should be retained.
  value: "7"
objects:
- kind: ServiceAccount
  apiVersion: v1
  metadata:
    name: ${NAME}
    namespace: ${NAMESPACE}
    labels:
      app: ${NAME}
- kind: ClusterRoleBinding
  apiVersion: rbac.authorization.k8s.io/v1
  metadata:
    name: ${NAME}-cluster-reader
    namespace: ${NAMESPACE}
    labels:
      app: ${NAME}
  roleRef:
    kind: ClusterRole
    name: cluster-reader
  subjects:
  - kind: ServiceAccount
    name: ${NAME}
  userNames:
  - "system:serviceaccount:${NAMESPACE}:${NAME}"
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: ${NAME}
    labels:
      app: ${NAME}
  spec:
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: ${CAPACITY}
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: ${NAME}
    namespace: ${NAMESPACE}
    labels:
      app: ${NAME}
  spec:
    triggers:
    - type: ConfigChange
    replicas: 1
    selector:
      app: ${NAME}
      deploymentconfig: ${NAME}
    template:
      metadata:
        labels:
          app: ${NAME}
          deploymentconfig: ${NAME}
      spec:
        serviceAccountname: ${NAME}
        serviceAccount: ${NAME}
        containers:
        - name: ${NAME}
          image: gerald1248/openshift-backup
          resources:
            limits:
              cpu: 200m
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 512Mi
          env:
          - name: OPENSHIFT_BACKUP_RETAIN_DAYS
            value: ${BACKUP_RETAIN_DAYS}
          - name: BACKUP_SECRETS
            value: "false"
          volumeMounts:
          - name: ${NAME}-data
            mountPath: /openshift-backup
        volumes:
        - name: ${NAME}-data
          persistentVolumeClaim:
            claimName: ${NAME}
- apiVersion: batch/v1beta1
  kind: CronJob
  metadata:
    name: ${NAME}
    namespace: ${NAMESPACE}
    labels:
      app: ${NAME}
  spec:
    schedule: ${SCHEDULE}
    successfulJobsHistoryLimit: 1
    failedJobsHistoryLimit: 1
    jobTemplate:
      spec:
        template:
          spec:
            serviceAccountname: ${NAME}
            serviceAccount: ${NAME}
            containers:
            - name: ${NAME}
              image: gerald1248/openshift-backup
              resources:
                limits:
                  cpu: 200m
                  memory: 1Gi
                requests:
                  cpu: 100m
                  memory: 512Mi
              args:
              - /bin/sh
              - -c
              - openshift-backup
              env:
              - name: POD_NAMESPACE
                value: ${NAMESPACE}
              - name: OPENSHIFT_BACKUP_RETAIN_DAYS
                value: ${BACKUP_RETAIN_DAYS}
              volumeMounts:
              - name: ${NAME}-data
                mountPath: /openshift-backup
            volumes:
            - name: ${NAME}-data
              persistentVolumeClaim:
                claimName: ${NAME}
            restartPolicy: Never
- kind: LimitRange
  apiVersion: v1
  metadata:
    name: ${NAME}
    namespace: ${NAMESPACE}
    labels:
      app: ${NAME}
  spec:
    limits:
    - type: Container
      default:
        cpu: 400m
        memory: 1Gi
      defaultRequest:
        cpu: 200m
        memory: 512Mi
- kind: ResourceQuota
  apiVersion: v1
  metadata:
    name: ${NAME}
    namespace: ${NAMESPACE}
    labels:
      app: ${NAME}
  spec:
    hard:
      pods: "4"
      requests.cpu: 800m
      requests.memory: 2Gi
      limits.cpu: 1600m
      limits.memory: 4Gi
